{"/1-create-an-eks/1.0":{"title":"1.0","data":{"소개#소개":"개인적으로는 EKS 를 CloudFormation 을 통해서 만드는 것을 추천하는 편입니다.\r\n하지만 처음부터 CloudFormation 으로 만드는 것은 쉽지는 않고, 먼저 콘솔에서 EKS 를 생성한 후에\r\n리소스들을 어떤 것들을 만들었는지 이런 것들을 모두 나열해보고 정리한 후에 CloudFormation 으로 EKS 를 생성하는 경우가 많지 않을까 싶습니다.이번문서는 콘솔에서 EKS 를 만드는 예를 정리합니다."}},"/0-setup-access-tools/0.2":{"title":"AWS Cloud 9 셋업","data":{}},"/0-setup-access-tools/0.1":{"title":"1. Administrator 권한의 IAM User, Access Key, Access Key Secret 생성","data":{}},"/0-setup-access-tools/0.3":{"title":"3. EKS, k8s 접근 도구 셋업","data":{}},"/1-create-an-eks/1.3":{"title":"1.3","data":{"3-managed-nodegroup-삭제#3. Managed Nodegroup 삭제":"이미 구동중이던 Managed Node Group 을 삭제하는 것은 아래의 명령어를 수행하면 됩니다.","노드그룹-삭제#노드그룹 삭제":"eksctl delete nodegroup --cluster=gitops-study-k8scluster --name=ng-99fc00b4","노드-조회#노드 조회":"kubectl get no\r\nNAME                                                 STATUS                        ROLES    AGE   VERSION\r\nip-192-168-105-26.ap-northeast-2.compute.internal    Ready                         <none>   11m   v1.27.7-eks-e71965b\r\nip-192-168-164-248.ap-northeast-2.compute.internal   Ready                         <none>   11m   v1.27.7-eks-e71965b\r\nip-192-168-28-115.ap-northeast-2.compute.internal    Ready,SchedulingDisabled      <none>   67m   v1.27.7-eks-e71965b\r\nip-192-168-38-181.ap-northeast-2.compute.internal    NotReady,SchedulingDisabled   <none>   67m   v1.27.7-eks-e71965b\n새로 생성 중인 노드를 확인해보면 아래와 같습니다."}},"/0-setup-access-tools/0.4":{"title":"4. Cloud9 의 Access Key, Access Key Secret 새로고침 문제 해결방법","data":{}},"/0-setup-access-tools/0.5":{"title":"5. ArgoCD ALB 용도의 Ingress 에 서브넷 지정, 보안 그룹 생성","data":{}},"/1-create-an-eks/1.2":{"title":"1.2","data":{"2-eksctl-을-사용해-eks-nodegroup-생성#2. eksctl 을 사용해 EKS Nodegroup 생성":"이미 배포되어있는 m5.large 타입의 인스턴스 2기를 t3.small 로 교체해주려고 하는데, 항상 그렇듯 물리적으로 한번에 교체하는 것은 불가능합니다. 이미 구동중인 m5.large 는 그대로 둔 상태에서 t3.small 기반의 클러스터를 배포합니다. 그리고 남아있는 m5.large 인스턴스 두기는 삭제합니다. 이번 문서에서는 t3.small 인스턴스 2 기를 배포하는 과정을 설명합니다.\r\nminimum-cluster.yml 이라는 이름의 파일을 생성하고 아래의 yml 명세서를 작성합니다.\n---\r\napiVersion: eksctl.io/v1alpha5\r\nkind: ClusterConfig\r\nmetadata:\r\n  name: gitops-study-k8scluster\r\n  region: ap-northeast-2\r\nmanagedNodeGroups:\r\n  - name: ng-workers\r\n    labels:\r\n      role: workers\r\n    instanceType: t3.small\r\n    desiredCapacity: 2\r\n    volumeSize: 20\r\n    privateNetworking: true\n그리고 아래의 eksctl 커맨드를 실행합니다.\neksctl create nodegroup --config-file=minimum-cluster.yml\nCloud 9 내에서 적용한 모습\r\n생성중인 노드는 콘솔에서 확인 가능합니다.\r\n\r\n새로 생성되는 중인 노드그룹은 ng-workers 입니다. ng-99fc00b4 라는 이름으로 이미 생성중인 노드 그룹은 노드의 인스턴스 크기가 커서 비용과금될 가능성이 크기 때문에 삭제할 예정입니다.\r\nng-workers 를 새로 만든 후에 ng-99fc00b4 을 삭제하는 이유는 이미 만들어둔 ng-99fc00b4 을 생성하면서 배포되어 있는 시스템 리소스들이 존재하는데 이 리소스들이 기존의 ec2 노드들에 자리잡고 있다. 그런데 이것을 삭제해버리면 이 노드들이 죽은 상태로 존재하게 됩니다.\r\n따라서 ng-workers 를 새로 추가 후에 ng-99fc00b4 를 삭제하면 기존에 생성된 노드들이 ng-workers 로 자연스럽게 이동이 될수 있기에 생성 후 삭제를 선택했습니다."}},"/1-create-an-eks/1.4":{"title":"1.4","data":{"4-eks-추가기능-vpc-cni-csi-드라이버-kube-proxy-coredns-설치#4. EKS 추가기능 (VPC CNI, CSI 드라이버, kube-proxy, CoreDNS) 설치":""}},"/1-create-an-eks/1.5":{"title":"1.5","data":{"5-oidc-조회-및-클러스터-service-account-생성#5. oidc 조회 및 클러스터 service account 생성":""}},"/1-create-an-eks/1.6":{"title":"1.6","data":{"6-helm-을-이용해-aws-load-balancer-controller-생성#6. helm 을 이용해 aws-load-balancer-controller 생성":""}},"/2-setup-argocd/2.2":{"title":"2.2","data":{"2-argocd-구축-2-argocd-에-http-허용#2. ArgoCD 구축 (2) ArgoCD 에 HTTP 허용":""}},"/2-setup-argocd/2.3":{"title":"2.3","data":{"3-80포트-허용된-argocd-에-ingress-url-을-통해-접속해보기#3. 80포트 허용된 ArgoCD 에 Ingress URL 을 통해 접속해보기":""}},"/3-etc/3.2":{"title":"3.2","data":{"트러블슈팅-cloud9-에서-aws-credential-이-자주-refresh-되는-이슈#(트러블슈팅) Cloud9 에서 AWS Credential 이 자주 Refresh 되는 이슈":""}},"/2-setup-argocd/2.4":{"title":"2.4","data":{"4-argocd-의-default-password-변경#4. ArgoCD 의 Default Password 변경":""}},"/advanced":{"title":"Advanced","data":{"":"This is the index page for the Advanced folder!"}},"/3-etc/3.1":{"title":"3.1","data":{"주요-공식자료들#주요 공식자료들":""}},"/2-setup-argocd/2.1":{"title":"2.1","data":{"1-argocd-공식-제공-yml-을-이용해-argocd-설치#1. ArgoCD 공식 제공 yml 을 이용해 ArgoCD 설치":""}},"/advanced/satori":{"title":"Satori","data":{"":"Satori (悟り) is a Japanese Buddhist term for awakening, \"comprehension; understanding\"."}},"/about":{"title":"About","data":{"":"This is the about page! This page is shown on the navbar."}},"/":{"title":"Introduction","data":{"":"Welcome to Nextra! This is a basic docs template. You can use it as a starting point for your own project :)","what-is-nextrazxcv#What is Nextra?zxcv":"A simple, powerful and flexible site generation framework with everything you love from Next.js.","documentation#Documentation":"The documentation is available at https://nextra.site."}},"/another":{"title":"Another Page","data":{"":"let a = 1;\r\n\r\nconsole.log(a);","component#Component":"","external-component#External Component":""}},"/1-create-an-eks/1.1":{"title":"1.1","data":{"1-eksctl-을-사용해-eks-cluster-생성#1. eksctl 을 사용해 EKS Cluster 생성":"eksctl 을 이용해 gitops-study-k8scluster 라는 이름의 클러스터를 생성한다.\neksctl create cluster --name gitops-study-k8scluster --region ap-northeast-2\n생성중인 모습 (Cloud 9)\r\n생성 완료\r\n클러스터를 생성하면 클러스터에 대한 VPC 도 하나 생성된다.\r\n(매니지먼트 콘솔 → VPC 메뉴)\r\n클러스터에 대한 서브넷이 생성된 모습\r\npublic 서브넷 3기, private 서브넷 3기가 생성되어 있다.\r\nEKS 대시보드로 이동한다.\r\n생성된 클러스터의 모습\r\n생성된 노드 그룹의 모습\r\n노드 그룹 상세 화면이다.\r\n인스턴스의 크기가 m5.large 로 비교적 크다. 이 사이즈를 다시 작은 사이즈의 노드그룹으로 바꿔줘야 추가적인 비용과금을 최소화할 수 있다. 다음 문서에서는 이 m5.large 인스턴스를 t3.small 인스턴스로 교체하는 작업을 수행한다."}}}