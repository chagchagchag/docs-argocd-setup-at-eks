(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[429],{8544:function(e,s,a){(window.__NEXT_P=window.__NEXT_P||[]).push(["/0-setup-access-tools/0.5",function(){return a(8723)}])},8723:function(e,s,a){"use strict";a.r(s),a.d(s,{__toc:function(){return i}});var n=a(5893),t=a(2673),c=a(373),r=a(8426);a(9128);var o=a(2643);let i=[{depth:2,value:"서브넷 지정",id:"서브넷-지정"},{depth:2,value:"보안그룹 생성",id:"보안그룹-생성"},{depth:2,value:"ingress.yml 작성",id:"ingressyml-작성"}];function _createMdxContent(e){let s=Object.assign({h1:"h1",h2:"h2",p:"p",img:"img",code:"code",ul:"ul",li:"li",pre:"pre",span:"span"},(0,o.a)(),e.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.h1,{children:"5. ArgoCD ALB 용도의 Ingress 에 서브넷 지정, 보안 그룹 생성"}),"\n",(0,n.jsx)(s.h2,{id:"서브넷-지정",children:"서브넷 지정"}),"\n",(0,n.jsxs)(s.p,{children:["웹 콘솔에서 VPC 를 검색해서 VPC 대시보드로 진입한다.\r\n",(0,n.jsx)(s.img,{src:"https://raw.githubusercontent.com/chagchagchag/docs-argocd-setup-at-eks/main/pages/0-setup-access-tools/img/5-DEFINE-SUBNET-SECURITY-GROUP/1.png",alt:"img"})]}),"\n",(0,n.jsx)("br",{}),"\n",(0,n.jsxs)(s.p,{children:["VPC 대시보드에서 ",(0,n.jsx)(s.code,{children:"서브넷"})," 을 클릭해서 서브넷 메뉴로 진입한다.\r\n여기서 ",(0,n.jsx)(s.code,{children:"VPC="})," 을 검색했을 때 검색어 추천으로 나타나는 VPC 중 이번 예제에서 생성중인 클러스터의 이름인 ",(0,n.jsx)(s.code,{children:"eksctl-gitops-study-k8scluster"})," 가 포함되어 있는 VPC를 선택한다.\r\n",(0,n.jsx)(s.img,{src:"https://raw.githubusercontent.com/chagchagchag/docs-argocd-setup-at-eks/main/pages/0-setup-access-tools/img/5-DEFINE-SUBNET-SECURITY-GROUP/2.png",alt:"img"})]}),"\n",(0,n.jsx)("br",{}),"\n",(0,n.jsxs)(s.p,{children:["이번에는 Name 에 Public 을 포함하는 서브넷을 조회하기 위해 name : public 을 입력해서 검색한다.\r\n",(0,n.jsx)(s.img,{src:"https://raw.githubusercontent.com/chagchagchag/docs-argocd-setup-at-eks/main/pages/0-setup-access-tools/img/5-DEFINE-SUBNET-SECURITY-GROUP/3.png",alt:"img"})]}),"\n",(0,n.jsx)("br",{}),"\n",(0,n.jsxs)(s.p,{children:["서브넷들의 서브넷 ID를 아래와 같이 복사해준다.\r\n",(0,n.jsx)(s.img,{src:"https://raw.githubusercontent.com/chagchagchag/docs-argocd-setup-at-eks/main/pages/0-setup-access-tools/img/5-DEFINE-SUBNET-SECURITY-GROUP/4.png",alt:"img"}),"\r\n같은 방법으로 Subnet Id 3개를 모두 복사해서 따로 복사해서 메모장 같은 곳에 복사해둔다."]}),"\n",(0,n.jsx)("br",{}),"\n",(0,n.jsx)(s.h2,{id:"보안그룹-생성",children:"보안그룹 생성"}),"\n",(0,n.jsxs)(s.p,{children:["EC2 를 검색해서 EC2 대시보드 페이지로 이동\r\n",(0,n.jsx)(s.img,{src:"https://raw.githubusercontent.com/chagchagchag/docs-argocd-setup-at-eks/main/pages/0-setup-access-tools/img/5-DEFINE-SUBNET-SECURITY-GROUP/5.png",alt:"img"})]}),"\n",(0,n.jsx)("br",{}),"\n",(0,n.jsxs)(s.p,{children:["EC2 대시보드 페이지에서는 보안그룹 생성 버튼을 눌러서 보안그룹 생성 페이지로 이동한다.\r\n",(0,n.jsx)(s.img,{src:"https://raw.githubusercontent.com/chagchagchag/docs-argocd-setup-at-eks/main/pages/0-setup-access-tools/img/5-DEFINE-SUBNET-SECURITY-GROUP/6.png",alt:"img"})]}),"\n",(0,n.jsx)("br",{}),"\n",(0,n.jsxs)(s.p,{children:["기본 세부 정보 입력\r\n",(0,n.jsx)(s.img,{src:"https://raw.githubusercontent.com/chagchagchag/docs-argocd-setup-at-eks/main/pages/0-setup-access-tools/img/5-DEFINE-SUBNET-SECURITY-GROUP/7.png",alt:"img"})]}),"\n",(0,n.jsx)("br",{}),"\n",(0,n.jsx)(s.p,{children:"인바운드 규칙 입력"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"규칙 추가"})," 버튼 클릭 후 80 포트에 대해 IPv4 Anywhere 가 적용되도록 지정해줬다."]}),"\n"]}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.img,{src:"https://raw.githubusercontent.com/chagchagchag/docs-argocd-setup-at-eks/main/pages/0-setup-access-tools/img/5-DEFINE-SUBNET-SECURITY-GROUP/8.png",alt:"img"})}),"\n",(0,n.jsx)("br",{}),"\n",(0,n.jsxs)(s.p,{children:["태그 지정",(0,n.jsx)("br",{}),"\r\n태그는 ",(0,n.jsx)(s.code,{children:"Name=ArgoCDIngressSG"})," 를 지정해줬다.",(0,n.jsx)("br",{}),"\r\n그리고 ",(0,n.jsx)(s.code,{children:"보안 그룹 생성"})," 버튼을 눌러서 보안 그룹을 생성한다.",(0,n.jsx)("br",{}),"\r\n",(0,n.jsx)(s.img,{src:"https://raw.githubusercontent.com/chagchagchag/docs-argocd-setup-at-eks/main/pages/0-setup-access-tools/img/5-DEFINE-SUBNET-SECURITY-GROUP/9.png",alt:"img"})]}),"\n",(0,n.jsx)("br",{}),"\n",(0,n.jsxs)(s.p,{children:["이렇게 생성된 보안그룹 ID 를 복사해서 메모장 같은 곳에 복사해둔다.\r\n",(0,n.jsx)(s.img,{src:"https://raw.githubusercontent.com/chagchagchag/docs-argocd-setup-at-eks/main/pages/0-setup-access-tools/img/5-DEFINE-SUBNET-SECURITY-GROUP/10.png",alt:"img"})]}),"\n",(0,n.jsx)("br",{}),"\n",(0,n.jsx)(s.h2,{id:"ingressyml-작성",children:"ingress.yml 작성"}),"\n",(0,n.jsx)(s.pre,{"data-language":"text","data-theme":"default",children:(0,n.jsxs)(s.code,{"data-language":"text","data-theme":"default",children:[(0,n.jsx)(s.span,{className:"line",children:(0,n.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"apiVersion: networking.k8s.io/v1"})}),"\n",(0,n.jsx)(s.span,{className:"line",children:(0,n.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"kind: Ingress"})}),"\n",(0,n.jsx)(s.span,{className:"line",children:(0,n.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"metadata:"})}),"\n",(0,n.jsx)(s.span,{className:"line",children:(0,n.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  name: argocd"})}),"\n",(0,n.jsx)(s.span,{className:"line",children:(0,n.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  namespace: argocd"})}),"\n",(0,n.jsx)(s.span,{className:"line",children:(0,n.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  annotations:"})}),"\n",(0,n.jsx)(s.span,{className:"line",children:(0,n.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"    alb.ingress.kubernetes.io/listen-ports: '[{\"HTTP\": 80}]'"})}),"\n",(0,n.jsx)(s.span,{className:"line",children:(0,n.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"    alb.ingress.kubernetes.io/scheme: internet-facing"})}),"\n",(0,n.jsx)(s.span,{className:"line",children:(0,n.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"    alb.ingress.kubernetes.io/target-type: ip"})}),"\n",(0,n.jsx)(s.span,{className:"line",children:(0,n.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"    alb.ingress.kubernetes.io/healthcheck-path: /healthz"})}),"\n",(0,n.jsx)(s.span,{className:"line",children:(0,n.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"    alb.ingress.kubernetes.io/healthcheck-protocol: HTTP"})}),"\n",(0,n.jsx)(s.span,{className:"line",children:(0,n.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"    alb.ingress.kubernetes.io/success-codes: '200'"})}),"\n",(0,n.jsx)(s.span,{className:"line",children:(0,n.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"    alb.ingress.kubernetes.io/security-groups: sg-aaaaa"})}),"\n",(0,n.jsx)(s.span,{className:"line",children:(0,n.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"    alb.ingress.kubernetes.io/subnets: subnet-aaaaa,subnet-bbbbb,subnet-ccccc"})}),"\n",(0,n.jsx)(s.span,{className:"line",children:(0,n.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"spec:"})}),"\n",(0,n.jsx)(s.span,{className:"line",children:(0,n.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  ingressClassName: alb"})}),"\n",(0,n.jsx)(s.span,{className:"line",children:(0,n.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  rules:"})}),"\n",(0,n.jsx)(s.span,{className:"line",children:(0,n.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  - http:"})}),"\n",(0,n.jsx)(s.span,{className:"line",children:(0,n.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"      paths:"})}),"\n",(0,n.jsx)(s.span,{className:"line",children:(0,n.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"      - path: /"})}),"\n",(0,n.jsx)(s.span,{className:"line",children:(0,n.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"        backend:"})}),"\n",(0,n.jsx)(s.span,{className:"line",children:(0,n.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"          service:"})}),"\n",(0,n.jsx)(s.span,{className:"line",children:(0,n.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"            name: argocd-server-nodeport"})}),"\n",(0,n.jsx)(s.span,{className:"line",children:(0,n.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"            port:"})}),"\n",(0,n.jsx)(s.span,{className:"line",children:(0,n.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"              number: 80"})}),"\n",(0,n.jsx)(s.span,{className:"line",children:(0,n.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"        pathType: Prefix"})})]})})]})}let l={MDXContent:function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:s}=Object.assign({},(0,o.a)(),e.components);return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(_createMdxContent,{...e})}):_createMdxContent(e)},pageOpts:{filePath:"pages/0-setup-access-tools/0.5.mdx",route:"/0-setup-access-tools/0.5",timestamp:1706444307e3,pageMap:[{kind:"Folder",name:"0-setup-access-tools",route:"/0-setup-access-tools",children:[{kind:"MdxPage",name:"0.1",route:"/0-setup-access-tools/0.1"},{kind:"MdxPage",name:"0.2",route:"/0-setup-access-tools/0.2"},{kind:"MdxPage",name:"0.3",route:"/0-setup-access-tools/0.3"},{kind:"MdxPage",name:"0.4",route:"/0-setup-access-tools/0.4"},{kind:"MdxPage",name:"0.5",route:"/0-setup-access-tools/0.5"},{kind:"Meta",data:{"0.1":"1.Administrator 권한의 IAM User, Access Key, Access Key Secret 생성","0.2":"2.AWS Cloud 9 셋업","0.3":"3.EKS, k8s 접근 도구 셋업","0.4":"4.Cloud9 의 Access Key, Access Key Secret 새로고침문제 해결방법","0.5":"5.ArgoCD ALB 용도의 Ingress 에 서브넷 지정, 보안 그룹 생성"}}]},{kind:"Folder",name:"1-create-an-eks",route:"/1-create-an-eks",children:[{kind:"MdxPage",name:"1.0",route:"/1-create-an-eks/1.0"},{kind:"MdxPage",name:"1.1",route:"/1-create-an-eks/1.1"},{kind:"MdxPage",name:"1.2",route:"/1-create-an-eks/1.2"},{kind:"MdxPage",name:"1.3",route:"/1-create-an-eks/1.3"},{kind:"MdxPage",name:"1.4",route:"/1-create-an-eks/1.4"},{kind:"MdxPage",name:"1.5",route:"/1-create-an-eks/1.5"},{kind:"MdxPage",name:"1.6",route:"/1-create-an-eks/1.6"},{kind:"Meta",data:{"1.0":"0. 소개","1.1":"1. eksctl 을 사용해 EKS Cluster 생성","1.2":"2. eksctl 을 사용해 EKS Nodegroup 생성","1.3":"3. Managed Nodegroup 삭제","1.4":"4. EKS 추가기능 (VPC CNI, CSI 드라이버, kube-proxy, CoreDNS) 설치","1.5":"5. oidc 조회 및 클러스터 service account 생성","1.6":"6. helm 을 이용해 aws-load-balancer-controller 생성"}}]},{kind:"Folder",name:"2-setup-argocd",route:"/2-setup-argocd",children:[{kind:"MdxPage",name:"2.1",route:"/2-setup-argocd/2.1"},{kind:"MdxPage",name:"2.2",route:"/2-setup-argocd/2.2"},{kind:"MdxPage",name:"2.3",route:"/2-setup-argocd/2.3"},{kind:"MdxPage",name:"2.4",route:"/2-setup-argocd/2.4"},{kind:"Meta",data:{"2.1":"1. ArgoCD 공식 제공 yml 을 이용해 ArgoCD 설치","2.2":"2. ArgoCD 구축 (2) ArgoCD 에 HTTP 허용","2.3":"3. 80포트 허용된 ArgoCD 에 Ingress URL 을 통해 접속해보기","2.4":"4. ArgoCD 의 Default Password 변경"}}]},{kind:"Folder",name:"3-etc",route:"/3-etc",children:[{kind:"MdxPage",name:"3.1",route:"/3-etc/3.1"},{kind:"MdxPage",name:"3.2",route:"/3-etc/3.2"},{kind:"Meta",data:{"3.1":"주요 공식자료들","3.2":"(트러블슈팅) Cloud9 에서 AWS Credential 이 자주 Refresh 되는 이슈"}}]},{kind:"MdxPage",name:"about",route:"/about"},{kind:"Folder",name:"advanced",route:"/advanced",children:[{kind:"MdxPage",name:"satori",route:"/advanced/satori"},{kind:"Meta",data:{satori:"Satori"}}]},{kind:"MdxPage",name:"advanced",route:"/advanced"},{kind:"MdxPage",name:"another",route:"/another"},{kind:"MdxPage",name:"index",route:"/"},{kind:"Meta",data:{"0-setup-access-tools":"접근 환경 구성","1-create-an-eks":"EKS 생성 & 셋업","2-setup-argocd":"EKS 내에 ArgoCD 구축","3-etc":"etc",index:"Introduction",another:"Another Page",advanced:"Advanced (A Folder)",about:{title:"About",type:"page"},contact:{title:"Contact ↗",type:"page",href:"-",newWindow:!0}}}],flexsearch:{codeblocks:!0},title:"5. ArgoCD ALB 용도의 Ingress 에 서브넷 지정, 보안 그룹 생성",headings:i},pageNextRoute:"/0-setup-access-tools/0.5",nextraLayout:c.ZP,themeConfig:r.Z};s.default=(0,t.j)(l)},8426:function(e,s,a){"use strict";var n=a(5893);a(7294);let t={logo:(0,n.jsx)("span",{children:"ArgoCD를 EKS설치하는 과정들"}),project:{link:"https://github.com/chagchagchag/docs-argocd-setup-at-eks"},docsRepositoryBase:"https://github.com/chagchagchag/docs-argocd-setup-at-eks",footer:{text:"Nextra Docs Template"}};s.Z=t},5789:function(){}},function(e){e.O(0,[774,796,888,179],function(){return e(e.s=8544)}),_N_E=e.O()}]);